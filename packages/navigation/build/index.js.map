{"version":3,"names":["_url","require","_qs","_lodash","_hooks","_history","_filters","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","navUtils","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof3","default","cache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","desc","set","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","push","apply","_objectSpread","target","i","arguments","length","source","_defineProperty2","getOwnPropertyDescriptors","defineProperties","getPath","getHistory","location","pathname","getPersistedQuery","query","undefined","getQuery","params","applyFilters","pick","getIdsFromQuery","queryString","uniq","split","map","id","parseInt","Boolean","getSearchWords","_typeof2","Error","search","searchWord","replace","getNewPath","path","currentQuery","args","addQueryArgs","parse","substring","onQueryChange","param","dir","updateQueryString","orderby","order","queryParam","ids","_updateQueryString","concat","value","newPath"],"sources":["/home/users/vikas.reactjs/www/html/king/wp-content/plugins/woo-point-of-sale/packages/navigation/src/index.js"],"sourcesContent":["/** @format */\n/**\n * External dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\nimport { parse } from 'qs';\nimport { pick, uniq } from 'lodash';\nimport { applyFilters } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport { getHistory } from './history';\n\n// Expose history so all uses get the same history object.\nexport { getHistory };\n\n// Export all filter utilities\nexport * from './filters';\n\n/**\n * Internal dependencies\n */\n// Import the module into itself. Functions consumed from this import can be mocked in tests.\nimport * as navUtils from './index';\n\n/**\n * Get the current path from history.\n *\n * @return {String}  Current path.\n */\nexport const getPath = () => getHistory().location.pathname;\n\n/**\n * Gets query parameters that should persist between screens or updates\n * to reports, such as filtering.\n *\n * @param {Object} query Query containing the parameters.\n * @return {Object} Object containing the persisted queries.\n */\nexport const getPersistedQuery = (query = navUtils.getQuery()) => {\n    const params = applyFilters( 'woocommerce_admin_persisted_queries', [\n\t\t'period',\n\t\t'compare',\n\t\t'before',\n\t\t'after',\n\t\t'interval',\n\t\t'type',\n\t] );\n\treturn pick( query, params );\n};\n\n/**\n * Get an array of IDs from a comma-separated query parameter.\n *\n * @param {string} queryString string value extracted from URL.\n * @return {Array} List of IDs converted to numbers.\n */\nexport function getIdsFromQuery(queryString = '') {\n    return uniq(\n\t\tqueryString\n\t\t\t.split( ',' )\n\t\t\t.map( id => parseInt( id, 10 ) )\n\t\t\t.filter( Boolean )\n\t);\n}\n\n/**\n * Get an array of searched words given a query.\n *\n * @param {Object} query Query object.\n * @return {Array} List of search words.\n */\nexport function getSearchWords(query = navUtils.getQuery()) {\n    if ( typeof query !== 'object' ) {\n\t\tthrow new Error(\n\t\t\t'Invalid parameter passed to getSearchWords, it expects an object or no parameters.'\n\t\t);\n\t}\n\tconst { search } = query;\n\tif ( ! search ) {\n\t\treturn [];\n\t}\n\tif ( typeof search !== 'string' ) {\n\t\tthrow new Error(\n\t\t\t\"Invalid 'search' type. getSearchWords expects query's 'search' property to be a string.\"\n\t\t);\n\t}\n\treturn search.split( ',' ).map( searchWord => searchWord.replace( '%2C', ',' ) );\n}\n\n\n/**\n * Return a URL with set query parameters.\n *\n * @param {Object} query object of params to be updated.\n * @param {String} path Relative path (defaults to current path).\n * @param {Object} currentQuery object of current query params (defaults to current querystring).\n * @return {String}  Updated URL merging query params into existing params.\n */\nexport function getNewPath(query, path = getPath(), currentQuery = getQuery()) {\n    const args = { ...currentQuery, ...query };\n\tif ( '/' !== path ) {\n\t\targs.path = path;\n\t}\n\n\treturn addQueryArgs( '', args );\n}\n\n/**\n * Get the current query string, parsed into an object, from history.\n *\n * @return {Object}  Current query object, defaults to empty object.\n */\nexport function getQuery() {\n    const search = getHistory().location.search;\n\tif ( search.length ) {\n\t\treturn parse( search.substring( 1 ) ) || {};\n\t}\n\treturn {};\n}\n\n/**\n * This function returns an event handler for the given `param`\n *\n * @param {string} param The parameter in the querystring which should be updated (ex `page`, `per_page`)\n * @param {string} path Relative path (defaults to current path).\n * @param {string} query object of current query params (defaults to current querystring).\n * @return {function} A callback which will update `param` to the passed value when called.\n */\nexport function onQueryChange(param, path = getPath(), query = getQuery()) {\n    switch ( param ) {\n\t\tcase 'sort':\n\t\t\treturn ( key, dir ) => updateQueryString( { orderby: key, order: dir }, path, query );\n\t\tcase 'compare':\n\t\t\treturn ( key, queryParam, ids ) =>\n\t\t\t\tupdateQueryString(\n\t\t\t\t\t{\n\t\t\t\t\t\t[ queryParam ]: `compare-${ key }`,\n\t\t\t\t\t\t[ key ]: ids,\n\t\t\t\t\t\tsearch: undefined,\n\t\t\t\t\t},\n\t\t\t\t\tpath,\n\t\t\t\t\tquery\n\t\t\t\t);\n\t\tdefault:\n\t\t\treturn value => updateQueryString( { [ param ]: value }, path, query );\n\t}\n}\n\n/**\n * Updates the query parameters of the current page.\n *\n * @param {Object} query object of params to be updated.\n * @param {String} path Relative path (defaults to current path).\n * @param {Object} currentQuery object of current query params (defaults to current querystring).\n */\nexport function updateQueryString(query, path = getPath(), currentQuery = getQuery()) {\n    const newPath = getNewPath( query, path, currentQuery );\n\tgetHistory().push( newPath );\n}\n"],"mappings":"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"}